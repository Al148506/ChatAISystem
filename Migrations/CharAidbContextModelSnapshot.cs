// <auto-generated />
using System;
using ChatAISystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatAISystem.Migrations
{
    [DbContext(typeof(CharAidbContext))]
    partial class CharAidbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChatAISystem.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Characte__3214EC070690E599");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("ChatAISystem.Models.Conversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Conversa__3214EC07F1B7E19D");

                    b.HasIndex("CharacterId");

                    b.HasIndex("UserId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("ChatAISystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC07172A7739");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E4E34C925D")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053486B47FD5")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChatAISystem.Models.Character", b =>
                {
                    b.HasOne("ChatAISystem.Models.User", "CreatedByNavigation")
                        .WithMany("Characters")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Character__Creat__3D5E1FD2");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("ChatAISystem.Models.Conversation", b =>
                {
                    b.HasOne("ChatAISystem.Models.Character", "Character")
                        .WithMany("Conversations")
                        .HasForeignKey("CharacterId")
                        .IsRequired()
                        .HasConstraintName("FK__Conversat__Chara__4BAC3F29");

                    b.HasOne("ChatAISystem.Models.User", "User")
                        .WithMany("Conversations")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Conversat__UserI__4AB81AF0");

                    b.Navigation("Character");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatAISystem.Models.Character", b =>
                {
                    b.Navigation("Conversations");
                });

            modelBuilder.Entity("ChatAISystem.Models.User", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Conversations");
                });
#pragma warning restore 612, 618
        }
    }
}
