@model ChatAISystem.Helper.Pagination.PaginatedList<User>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/CustomIndex.css" />
    <link rel="stylesheet" href="~/css/Modal.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">


    <div class="container-fluid py-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Users</h1>
            <div class="ms-auto">
                <div class="form-group">
                    <a asp-controller="User" asp-action="Create" class="btn btn-success">
                        <i class="fas fa-plus-circle me-2"></i> New User
                    </a>
                </div>
            </div>
        </div>
        <form asp-action="Index" method="get">
            <div class="search-filter">
                <div class="d-flex align-items-end flex-wrap mb-0">
                    <!-- Campo de búsqueda por nombre -->
                    <div class="me-2">
                        <div class="form-group">
                            <input type="text" name="searchName" value="@ViewData["CurrentFilter"]" class="form-control" laceholder="Search by character name...">
                        </div>
                    </div>
                    <!-- Botones -->
                    <div class="me-2">
                        <div class="form-group">
                            <label>&nbsp;</label>
                            <button type="submit" class="btn btn-primary">Search</button>
                        </div>
                    </div>
                    <div class="me-2">
                        <div class="form-group">
                            <label>&nbsp;</label>
                            <a asp-action="Index" class="btn btn-primary form-control">Complete List</a>
                        </div>
                    </div>
                </div>
        </form>
        <!-- Tabla de Usuarios -->
        <div class="table-responsive">
            <table class="table-custom">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model[0].Username)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model[0].Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model[0].Role)
                        </th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Select((value, index) => new { value, index }))
                    {
                        <tr style="--row-index: @item.index">
                            <td>
                                @Html.DisplayFor(modelItem => item.value.Username)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.Role)
                            </td>
                            <td class="action-buttons">
                                <a asp-action="Edit" asp-route-id="@item.value.Id">Editar</a> |
                                <a asp-action="Details" asp-route-id="@item.value.Id">Detalles</a> |
                                <a asp-action="Delete" asp-route-id="@item.value.Id">Eliminar</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
            <!-- Pagination -->
            <div class="pagintion-container d-flex justify-content-md-around justify-content-sm-around  align-items-center">
                @{
                    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                }

                <a asp-action="Index"
                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn-prev btn-outline-primary @prevDisabled">
                    <i class="fas fa-chevron-left"></i> Previous
                </a>

                <span class="text-muted text-pages">Page @Model.PageIndex of @Model.TotalPages</span>

                <a asp-action="Index"
                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn-next btn-outline-primary @nextDisabled">
                    Next <i class="fas fa-chevron-right  btn-next"></i>
                </a>
            </div>
        </div>
